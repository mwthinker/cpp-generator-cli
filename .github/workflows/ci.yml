name: CI
on: [push, workflow_dispatch]

jobs:
  job:
    name: ${{ matrix.os }}-${{ github.workflow }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-latest
            preset: 'windows'
          - os: ubuntu-latest
            preset: 'unix'

    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Set up JDK 19
        uses: actions/setup-java@v3
        with:
          java-version: '19'
          distribution: 'adopt'

      - name: Run Maven install
        shell: bash
        run: mvn clean install

      - name: Set C++ VCPKG_ROOT
        shell: bash
        run: echo VCPKG_ROOT="$VCPKG_INSTALLATION_ROOT" >> "$GITHUB_ENV"; cat "$GITHUB_ENV"

      - name: Run binary file Unix
        shell: bash
        run: |
          cd target
          ./cppgen --new CppProject --test --cmake
        if: runner.os != 'Windows'

      - name: Run binary file Windows
        shell: bash
        run: |
          cd target
          ./cppgen.exe --new CppProject --test --cmake
        if: runner.os == 'Windows'

      - name: Set C++/C compiler on macOS
        shell: bash
        run: echo "CC=$(brew --prefix llvm@14)/bin/clang" >> $GITHUB_ENV; echo "CXX=$(brew --prefix llvm@14)/bin/clang++" >> $GITHUB_ENV; cat "$GITHUB_ENV"
        if: runner.os == 'macOS'

      - name: Run CMake with manifest mode vcpkg
        shell: bash
        run: |
          cd target/CppProject
          cmake --preset=${{ matrix.preset }} -B build -DCMAKE_VERBOSE_MAKEFILE=1

      - name: Compile C++ project
        shell: bash
        run: |
          cd target/CppProject
          cmake --build build
